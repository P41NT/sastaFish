#pragma once

#include "board.hpp"
#include <array>
#include <utility>

namespace eval {
    static constexpr std::array<int, 6> pieceValues = { 100, 300, 325, 500, 900, 0 };
    static const int materialWeight = 1;
    static const int mobilityWeight = 0;

    int evaluateBoard(Board &b);
    int materialScore(Board &b);
    std::pair<int, int> mobility(Board &b);

    int staticExchange(Board &b, Square sq);

    static constexpr std::array<std::array<int, 64>, 7> pieceSquareTableWhite = {{
        { 
               0,   0,   0,   0,   0,   0,   0,   0,
              50,  50,  50,  50,  50,  50,  50,  50,
              10,  10,  20,  30,  30,  20,  10,  10,
               5,   5,  10,  25,  25,  10,   5,   5,
               0,   0,   0,  20,  20,   0,   0,   0,
               5,  -5, -10,   0,   0, -10,  -5,   5,
               5,  10,  10, -20, -20,  10,  10,   5,
               0,   0,   0,   0,   0,   0,   0,   0
        },
        { 
             -50, -40, -30, -30, -30, -30, -40, -50,
             -40, -20,   0,   5,   5,   0, -20, -40,
             -30,   5,  10,  15,  15,  10,   5, -30,
             -30,   0,  15,  20,  20,  15,   0, -30,
             -30,   5,  15,  20,  20,  15,   5, -30,
             -30,   0,  10,  15,  15,  10,   0, -30,
             -40, -20,   0,   0,   0,   0, -20, -40,
             -50, -40, -30, -30, -30, -30, -40, -50
        },
        {
             -20, -10, -10, -10, -10, -10, -10, -20,
             -10,   5,   0,   0,   0,   0,   5, -10,
             -10,  10,  10,  10,  10,  10,  10, -10,
             -10,   0,  10,  10,  10,  10,   0, -10,
             -10,   5,   5,  10,  10,   5,   5, -10,
             -10,   0,   5,  10,  10,   5,   0, -10,
             -10,   0,   0,   0,   0,   0,   0, -10,
             -20, -10, -10, -10, -10, -10, -10, -20
       },
       {
               0,   0,   5,  10,  10,   5,   0,   0,
              -5,   0,   0,   0,   0,   0,   0,  -5,
              -5,   0,   0,   0,   0,   0,   0,  -5,
              -5,   0,   0,   0,   0,   0,   0,  -5,
              -5,   0,   0,   0,   0,   0,   0,  -5,
              -5,   0,   0,   0,   0,   0,   0,  -5,
               5,  10,  10,  10,  10,  10,  10,   5,
               0,   0,   0,   0,   0,   0,   0,   0
       },
       {
             -20, -10, -10,  -5,  -5, -10, -10, -20,
             -10,   0,   0,   0,   0,   0,   0, -10,
             -10,   0,   5,   5,   5,   5,   0, -10,
              -5,   0,   5,   5,   5,   5,   0,  -5,
              -5,   0,   5,   5,   5,   5,   0,  -5,
             -10,   5,   5,   5,   5,   5,   0, -10,
             -10,   0,   5,   0,   0,   0,   0, -10,
             -20, -10, -10,  -5,  -5, -10, -10, -20
       },
       {
             -30, -40, -40, -50, -50, -40, -40, -30,
             -30, -40, -40, -50, -50, -40, -40, -30,
             -30, -40, -40, -50, -50, -40, -40, -30,
             -30, -40, -40, -50, -50, -40, -40, -30,
             -20, -30, -30, -40, -40, -30, -30, -20,
             -10, -20, -20, -20, -20, -20, -20, -10,
              20,  20,   0,   0,   0,   0,  20,  20,
              20,  30,  10,   0,   0,  10,  30,  20
       },
       {
             -95,  -95,  -90,  -90,  -90,  -90,  -95,  -95,  
             -95,  -50,  -50,  -50,  -50,  -50,  -50,  -95,  
             -90,  -50,  -20,  -20,  -20,  -20,  -50,  -90,  
             -90,  -50,  -20,    0,    0,  -20,  -50,  -90,  
             -90,  -50,  -20,    0,    0,  -20,  -50,  -90,  
             -90,  -50,  -20,  -20,  -20,  -20,  -50,  -90,  
             -95,  -50,  -50,  -50,  -50,  -50,  -50,  -95,  
             -95,  -95,  -90,  -90,  -90,  -90,  -95,  -95,
       }
    }};

    static constexpr std::array<std::array<int, 64>, 7> pieceSquareTableBlack = {{
        {
             0,   0,   0,   0,   0,   0,   0,   0,
             5,  10,  10, -20, -20,  10,  10,   5,
             5,  -5, -10,   0,   0, -10,  -5,   5,
             0,   0,   0,  20,  20,   0,   0,   0,
             5,   5,  10,  25,  25,  10,   5,   5,
            10,  10,  20,  30,  30,  20,  10,  10,
            50,  50,  50,  50,  50,  50,  50,  50,
             0,   0,   0,   0,   0,   0,   0,   0
        },
        {
           -50, -40, -30, -30, -30, -30, -40, -50,
           -40, -20,   0,   0,   0,   0, -20, -40,
           -30,   0,  10,  15,  15,  10,   0, -30,
           -30,   5,  15,  20,  20,  15,   5, -30,
           -30,   0,  15,  20,  20,  15,   0, -30,
           -30,   5,  10,  15,  15,  10,   5, -30,
           -40, -20,   0,   5,   5,   0, -20, -40,
           -50, -40, -30, -30, -30, -30, -40, -50
        },
        {
           -20, -10, -10, -10, -10, -10, -10, -20,
           -10,   0,   0,   0,   0,   0,   0, -10,
           -10,   0,   5,  10,  10,   5,   0, -10,
           -10,   5,   5,  10,  10,   5,   5, -10,
           -10,   0,  10,  10,  10,  10,   0, -10,
           -10,  10,  10,  10,  10,  10,  10, -10,
           -10,   5,   0,   0,   0,   0,   5, -10,
           -20, -10, -10, -10, -10, -10, -10, -20
        },
        {
             0,   0,   0,   0,   0,   0,   0,   0,
             5,  10,  10,  10,  10,  10,  10,   5,
            -5,   0,   0,   0,   0,   0,   0,  -5,
            -5,   0,   0,   0,   0,   0,   0,  -5,
            -5,   0,   0,   0,   0,   0,   0,  -5,
            -5,   0,   0,   0,   0,   0,   0,  -5,
            -5,   0,   0,   0,   0,   0,   0,  -5,
             0,   0,   5,  10,  10,   5,   0,   0
        },
        {
           -20, -10, -10,  -5,  -5, -10, -10, -20,
           -10,   0,   5,   0,   0,   0,   0, -10,
           -10,   5,   5,   5,   5,   5,   0, -10,
            -5,   0,   5,   5,   5,   5,   0,  -5,
            -5,   0,   5,   5,   5,   5,   0,  -5,
           -10,   0,   5,   5,   5,   5,   0, -10,
           -10,   0,   0,   0,   0,   0,   0, -10,
           -20, -10, -10,  -5,  -5, -10, -10, -20
        },
        {
            20,  30,  10,   0,   0,  10,  30,  20,
            20,  20,   0,   0,   0,   0,  20,  20,
           -10, -20, -20, -20, -20, -20, -20, -10,
           -20, -30, -30, -40, -40, -30, -30, -20,
           -30, -40, -40, -50, -50, -40, -40, -30,
           -30, -40, -40, -50, -50, -40, -40, -30,
           -30, -40, -40, -50, -50, -40, -40, -30,
           -30, -40, -40, -50, -50, -40, -40, -30
        }
    }};
}

